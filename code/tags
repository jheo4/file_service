!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AVAILABLE	/home/jin/github/file_service/code/config.h	16;"	d	language:C++
INThandler	/home/jin/github/file_service/code/Client.c	/^void INThandler(int sig){$/;"	f	language:C++
INThandler	/home/jin/github/file_service/code/Client.c	/^void INThandler(int);$/;"	p	language:C++	file:
INThandler	/home/jin/github/file_service/code/Server.c	/^void INThandler(int sig){$/;"	f	language:C++
INThandler	/home/jin/github/file_service/code/Server.c	/^void INThandler(int);$/;"	p	language:C++	file:
MAX_CLIENT	/home/jin/github/file_service/code/config.h	6;"	d	language:C++
MAX_QUEUE	/home/jin/github/file_service/code/config.h	5;"	d	language:C++
MAX_QUEUE_ELEM	/home/jin/github/file_service/code/config.h	4;"	d	language:C++
META_ELEM_SECTION	/home/jin/github/file_service/code/config.h	9;"	d	language:C++
MSG_HEADER_SIZE	/home/jin/github/file_service/code/config.h	3;"	d	language:C++
OUTPUT_FN	/home/jin/github/file_service/code/OutputGenerator.h	1;"	d	language:C++
OUTPUT_MODE	/home/jin/github/file_service/code/OutputGenerator.h	2;"	d	language:C++
QUEUE_ELEM_SECTION	/home/jin/github/file_service/code/config.h	8;"	d	language:C++
QUEUE_POOL_KEY	/home/jin/github/file_service/code/config.h	11;"	d	language:C++
REQUESTED	/home/jin/github/file_service/code/config.h	17;"	d	language:C++
SEG_KEY	/home/jin/github/file_service/code/config.h	12;"	d	language:C++
SERVER_IDENTIFIER	/home/jin/github/file_service/code/config.h	1;"	d	language:C++
USED	/home/jin/github/file_service/code/config.h	18;"	d	language:C++
bindClient	/home/jin/github/file_service/code/Server.c	/^void *bindClient();$/;"	p	language:C++	file:
bindClient	/home/jin/github/file_service/code/Server.c	/^void *bindClient(){$/;"	f	language:C++
callBack	/home/jin/github/file_service/code/Client.c	/^typedef void (*callBack)();$/;"	t	language:C++	file:
callBack	/home/jin/github/file_service/code/Server.c	/^typedef void (*callBack)();$/;"	t	language:C++	file:
cleanQueue	/home/jin/github/file_service/code/ShmQueue.c	/^void cleanQueue(shmQueue_t* queue){$/;"	f	language:C++
cleanQueue	/home/jin/github/file_service/code/ShmQueue.h	/^void cleanQueue(shmQueue_t* queue);$/;"	p	language:C++
clear	/home/jin/github/file_service/code/config.h	14;"	d	language:C++
config	/home/jin/github/file_service/code/YamlParser.h	/^static const cyaml_config_t config = {$/;"	v	language:C++
content	/home/jin/github/file_service/code/ShmQueue.h	/^  void *content;$/;"	m	language:C++	struct:message
contentSize	/home/jin/github/file_service/code/ShmQueue.h	/^  size_t contentSize;$/;"	m	language:C++	struct:message
createQueue	/home/jin/github/file_service/code/ShmQueue.c	/^void createQueue(unsigned int _maxSeg, unsigned int _sizePerSeg,$/;"	f	language:C++
createQueue	/home/jin/github/file_service/code/ShmQueue.h	/^void createQueue(unsigned int _maxSeg, unsigned int _sizePerSeg,$/;"	p	language:C++
curInfo	/home/jin/github/file_service/code/Client.c	/^  int curInfo;$/;"	m	language:C++	struct:printInfo	file:
curSeg	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int curSeg;$/;"	m	language:C++	struct:shmQueueMeta
dequeue	/home/jin/github/file_service/code/ShmQueue.c	/^int dequeue(shmQueue_t* queue, struct message* data){$/;"	f	language:C++
dequeue	/home/jin/github/file_service/code/ShmQueue.h	/^int dequeue(shmQueue_t* queue, message_t* data);$/;"	p	language:C++
destroyQueue	/home/jin/github/file_service/code/ShmQueue.c	/^void destroyQueue(shmQueue_t* queue){$/;"	f	language:C++
destroyQueue	/home/jin/github/file_service/code/ShmQueue.h	/^void destroyQueue(shmQueue_t* queue);$/;"	p	language:C++
empty	/home/jin/github/file_service/code/ShmQueue.h	/^  int empty;$/;"	m	language:C++	struct:shmQueueMeta
enqueue	/home/jin/github/file_service/code/ShmQueue.c	/^int enqueue(shmQueue_t* queue, struct message* data){$/;"	f	language:C++
enqueue	/home/jin/github/file_service/code/ShmQueue.h	/^int enqueue(shmQueue_t* queue, message_t* data);$/;"	p	language:C++
fileType	/home/jin/github/file_service/code/YamlParser.h	/^  const char *fileType;$/;"	m	language:C++	struct:request
fileTypeSchema	/home/jin/github/file_service/code/YamlParser.h	/^static const cyaml_schema_field_t fileTypeSchema[] = {$/;"	v	language:C++
fn	/home/jin/github/file_service/code/ShmQueue.h	/^  char fn[30];$/;"	m	language:C++	struct:message
full	/home/jin/github/file_service/code/ShmQueue.h	/^  int full;$/;"	m	language:C++	struct:shmQueueMeta
generateOutput	/home/jin/github/file_service/code/OutputGenerator.c	/^void generateOutput(resultInfo_t *res){$/;"	f	language:C++
generateOutput	/home/jin/github/file_service/code/OutputGenerator.h	/^void generateOutput(resultInfo_t *res);$/;"	p	language:C++
getPoolInfo	/home/jin/github/file_service/code/ShwRapper.c	/^poolInfo_t* getPoolInfo(unsigned int *poolID){$/;"	f	language:C++
getRequest	/home/jin/github/file_service/code/Server.c	/^void getRequest(int idx){ dequeue(&queue[idx], &queueMessage[0]); }$/;"	f	language:C++
getResponse	/home/jin/github/file_service/code/Client.c	/^void getResponse(){ dequeue(&queue[1], &queueMessage[1]); }$/;"	f	language:C++
getShm	/home/jin/github/file_service/code/ShwRapper.c	/^int getShm(int key, int size){$/;"	f	language:C++
id	/home/jin/github/file_service/code/ShmQueue.h	/^  int id;$/;"	m	language:C++	struct:message
info	/home/jin/github/file_service/code/Client.c	/^  char info[20][30];$/;"	m	language:C++	struct:printInfo	file:
initQueue	/home/jin/github/file_service/code/ShmQueue.c	/^void initQueue(shmQueue_t* queue){$/;"	f	language:C++
initQueue	/home/jin/github/file_service/code/ShmQueue.h	/^void initQueue(shmQueue_t* queue);$/;"	p	language:C++
isEmpty	/home/jin/github/file_service/code/ShmQueue.c	/^int isEmpty(shmQueue_t* queue){$/;"	f	language:C++
isEmpty	/home/jin/github/file_service/code/ShmQueue.h	/^int isEmpty(shmQueue_t*);$/;"	p	language:C++
isFull	/home/jin/github/file_service/code/ShmQueue.c	/^int isFull(shmQueue_t* queue){$/;"	f	language:C++
isFull	/home/jin/github/file_service/code/ShmQueue.h	/^int isFull(shmQueue_t*);$/;"	p	language:C++
isSync	/home/jin/github/file_service/code/Client.c	/^int isSync = 0;$/;"	v	language:C++
isSync	/home/jin/github/file_service/code/OutputGenerator.h	/^  int isSync;$/;"	m	language:C++	struct:resultInfo
isSync	/home/jin/github/file_service/code/Server.c	/^int isSync;$/;"	v	language:C++
lock	/home/jin/github/file_service/code/ShmQueue.h	/^  pthread_mutex_t lock;$/;"	m	language:C++	struct:shmQueueMeta
main	/home/jin/github/file_service/code/Client.c	/^int main(int argc, char *argv[]){$/;"	f	language:C++
main	/home/jin/github/file_service/code/Server.c	/^int main(int argc, char *argv[]){$/;"	f	language:C++
maxSeg	/home/jin/github/file_service/code/Client.c	/^unsigned int maxSeg = 0;$/;"	v	language:C++
maxSeg	/home/jin/github/file_service/code/OutputGenerator.h	/^  int maxSeg;$/;"	m	language:C++	struct:resultInfo
maxSeg	/home/jin/github/file_service/code/Server.c	/^unsigned int maxSeg = 0;$/;"	v	language:C++
maxSeg	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int maxSeg;$/;"	m	language:C++	struct:segInfo
maxSeg	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int maxSeg;$/;"	m	language:C++	struct:shmQueue
message	/home/jin/github/file_service/code/ShmQueue.h	/^typedef struct message{$/;"	s	language:C++
message::content	/home/jin/github/file_service/code/ShmQueue.h	/^  void *content;$/;"	m	language:C++	struct:message
message::contentSize	/home/jin/github/file_service/code/ShmQueue.h	/^  size_t contentSize;$/;"	m	language:C++	struct:message
message::fn	/home/jin/github/file_service/code/ShmQueue.h	/^  char fn[30];$/;"	m	language:C++	struct:message
message::id	/home/jin/github/file_service/code/ShmQueue.h	/^  int id;$/;"	m	language:C++	struct:message
message_t	/home/jin/github/file_service/code/ShmQueue.h	/^}message_t;$/;"	t	language:C++	typeref:struct:message
meta	/home/jin/github/file_service/code/ShmQueue.h	/^  shmQueueMeta_t *meta;$/;"	m	language:C++	struct:shmQueue
metaID	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int metaID;$/;"	m	language:C++	struct:shmQueue
pInfo	/home/jin/github/file_service/code/Client.c	/^printInfo_t pInfo;$/;"	v	language:C++
pid	/home/jin/github/file_service/code/Client.c	/^unsigned int pid=-1;$/;"	v	language:C++
pid	/home/jin/github/file_service/code/OutputGenerator.h	/^  int pid;$/;"	m	language:C++	struct:resultInfo
pid	/home/jin/github/file_service/code/Server.c	/^unsigned int pid;$/;"	v	language:C++
printInfo	/home/jin/github/file_service/code/Client.c	/^typedef struct printInfo{$/;"	s	language:C++	file:
printInfo::curInfo	/home/jin/github/file_service/code/Client.c	/^  int curInfo;$/;"	m	language:C++	struct:printInfo	file:
printInfo::info	/home/jin/github/file_service/code/Client.c	/^  char info[20][30];$/;"	m	language:C++	struct:printInfo	file:
printInfo::timeEachFile	/home/jin/github/file_service/code/Client.c	/^  double timeEachFile[10];$/;"	m	language:C++	struct:printInfo	file:
printInfo_t	/home/jin/github/file_service/code/Client.c	/^} printInfo_t;$/;"	t	language:C++	typeref:struct:printInfo	file:
printQueueInfo	/home/jin/github/file_service/code/ShmQueue.c	/^void printQueueInfo(shmQueue_t* queue){$/;"	f	language:C++
printQueueInfo	/home/jin/github/file_service/code/ShmQueue.h	/^void printQueueInfo(shmQueue_t* queue);$/;"	p	language:C++
printTotalInfo	/home/jin/github/file_service/code/Client.c	/^void printTotalInfo(int cur, int tot, int curIter, int totIter);$/;"	p	language:C++	file:
printTotalInfo	/home/jin/github/file_service/code/Client.c	/^void printTotalInfo(int cur, int tot, int curIter, int totIter){$/;"	f	language:C++
queue	/home/jin/github/file_service/code/Client.c	/^shmQueue_t queue[2];$/;"	v	language:C++
queue	/home/jin/github/file_service/code/Server.c	/^shmQueue_t queue[MAX_QUEUE];$/;"	v	language:C++
queueIndex	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int queueIndex;$/;"	m	language:C++	struct:shmQueue
queueMessage	/home/jin/github/file_service/code/Client.c	/^message_t queueMessage[2];$/;"	v	language:C++
queueMessage	/home/jin/github/file_service/code/Server.c	/^message_t queueMessage[2];$/;"	v	language:C++
queuePool	/home/jin/github/file_service/code/Client.c	/^poolInfo_t *queuePool;$/;"	v	language:C++
queuePool	/home/jin/github/file_service/code/Server.c	/^poolInfo_t *queuePool;$/;"	v	language:C++
queuePoolID	/home/jin/github/file_service/code/Client.c	/^unsigned int queuePoolID;$/;"	v	language:C++
queuePoolID	/home/jin/github/file_service/code/Server.c	/^unsigned int queuePoolID;$/;"	v	language:C++
readIndex	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int readIndex;$/;"	m	language:C++	struct:shmQueueMeta
reqFunc	/home/jin/github/file_service/code/Server.c	/^callBack reqFunc;$/;"	v	language:C++
reqInfo	/home/jin/github/file_service/code/Client.c	/^requestInfo_t *reqInfo;$/;"	v	language:C++
request	/home/jin/github/file_service/code/YamlParser.h	/^typedef struct request {$/;"	s	language:C++
request::fileType	/home/jin/github/file_service/code/YamlParser.h	/^  const char *fileType;$/;"	m	language:C++	struct:request
requestClient	/home/jin/github/file_service/code/Server.c	/^unsigned int requestClient;$/;"	v	language:C++
requestInfo	/home/jin/github/file_service/code/YamlParser.h	/^typedef struct requestInfo {$/;"	s	language:C++
requestInfo::requests	/home/jin/github/file_service/code/YamlParser.h	/^  request_t* requests;$/;"	m	language:C++	struct:requestInfo
requestInfo::requests_count	/home/jin/github/file_service/code/YamlParser.h	/^  uint64_t requests_count;$/;"	m	language:C++	struct:requestInfo
requestInfoFieldSchema	/home/jin/github/file_service/code/YamlParser.h	/^static const cyaml_schema_field_t requestInfoFieldSchema[] = {$/;"	v	language:C++
requestInfo_t	/home/jin/github/file_service/code/YamlParser.h	/^}requestInfo_t;$/;"	t	language:C++	typeref:struct:requestInfo
requestSchema	/home/jin/github/file_service/code/YamlParser.h	/^static const cyaml_schema_value_t requestSchema = {$/;"	v	language:C++
requestServer	/home/jin/github/file_service/code/Client.c	/^void *requestServer();$/;"	p	language:C++	file:
requestServer	/home/jin/github/file_service/code/Client.c	/^void *requestServer(){$/;"	f	language:C++
requestTypeSchema	/home/jin/github/file_service/code/YamlParser.h	/^static const cyaml_schema_value_t requestTypeSchema = {$/;"	v	language:C++
request_t	/home/jin/github/file_service/code/YamlParser.h	/^} request_t;$/;"	t	language:C++	typeref:struct:request
requests	/home/jin/github/file_service/code/YamlParser.h	/^  request_t* requests;$/;"	m	language:C++	struct:requestInfo
requests_count	/home/jin/github/file_service/code/YamlParser.h	/^  uint64_t requests_count;$/;"	m	language:C++	struct:requestInfo
resFunc	/home/jin/github/file_service/code/Client.c	/^callBack resFunc;$/;"	v	language:C++
resultInfo	/home/jin/github/file_service/code/OutputGenerator.h	/^typedef struct resultInfo{$/;"	s	language:C++
resultInfo::isSync	/home/jin/github/file_service/code/OutputGenerator.h	/^  int isSync;$/;"	m	language:C++	struct:resultInfo
resultInfo::maxSeg	/home/jin/github/file_service/code/OutputGenerator.h	/^  int maxSeg;$/;"	m	language:C++	struct:resultInfo
resultInfo::pid	/home/jin/github/file_service/code/OutputGenerator.h	/^  int pid;$/;"	m	language:C++	struct:resultInfo
resultInfo::simple	/home/jin/github/file_service/code/OutputGenerator.h	/^  long double simple;$/;"	m	language:C++	struct:resultInfo
resultInfo::sizePerSeg	/home/jin/github/file_service/code/OutputGenerator.h	/^  int sizePerSeg;$/;"	m	language:C++	struct:resultInfo
resultInfo::stress	/home/jin/github/file_service/code/OutputGenerator.h	/^  long double stress;$/;"	m	language:C++	struct:resultInfo
resultInfo::wait	/home/jin/github/file_service/code/OutputGenerator.h	/^  long double wait;$/;"	m	language:C++	struct:resultInfo
resultInfo_t	/home/jin/github/file_service/code/OutputGenerator.h	/^}resultInfo_t;$/;"	t	language:C++	typeref:struct:resultInfo
seg	/home/jin/github/file_service/code/Client.c	/^segInfo_t *seg;$/;"	v	language:C++
seg	/home/jin/github/file_service/code/Server.c	/^segInfo_t *seg;$/;"	v	language:C++
segID	/home/jin/github/file_service/code/Client.c	/^unsigned int segID;$/;"	v	language:C++
segID	/home/jin/github/file_service/code/Server.c	/^unsigned int segID;$/;"	v	language:C++
segInfo	/home/jin/github/file_service/code/ShmQueue.h	/^typedef struct segInfo{$/;"	s	language:C++
segInfo::maxSeg	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int maxSeg;$/;"	m	language:C++	struct:segInfo
segInfo::sizePerSeg	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int sizePerSeg;$/;"	m	language:C++	struct:segInfo
segInfo_t	/home/jin/github/file_service/code/ShmQueue.h	/^}segInfo_t;$/;"	t	language:C++	typeref:struct:segInfo
servingClient	/home/jin/github/file_service/code/Server.c	/^unsigned int servingClient;$/;"	v	language:C++
setSharedLock	/home/jin/github/file_service/code/ShwRapper.c	/^int setSharedLock(pthread_mutex_t *inputLock){$/;"	f	language:C++
shmIDs	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int shmIDs[MAX_QUEUE_ELEM];$/;"	m	language:C++	struct:shmQueue
shmQueue	/home/jin/github/file_service/code/ShmQueue.h	/^typedef struct shmQueue{$/;"	s	language:C++
shmQueue::maxSeg	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int maxSeg;$/;"	m	language:C++	struct:shmQueue
shmQueue::meta	/home/jin/github/file_service/code/ShmQueue.h	/^  shmQueueMeta_t *meta;$/;"	m	language:C++	struct:shmQueue
shmQueue::metaID	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int metaID;$/;"	m	language:C++	struct:shmQueue
shmQueue::queueIndex	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int queueIndex;$/;"	m	language:C++	struct:shmQueue
shmQueue::shmIDs	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int shmIDs[MAX_QUEUE_ELEM];$/;"	m	language:C++	struct:shmQueue
shmQueue::sizeOfMsg	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int sizeOfMsg;$/;"	m	language:C++	struct:shmQueue
shmQueue::sizePerSeg	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int sizePerSeg;$/;"	m	language:C++	struct:shmQueue
shmQueueMeta	/home/jin/github/file_service/code/ShmQueue.h	/^typedef struct shmQueueMeta{$/;"	s	language:C++
shmQueueMeta::curSeg	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int curSeg;$/;"	m	language:C++	struct:shmQueueMeta
shmQueueMeta::empty	/home/jin/github/file_service/code/ShmQueue.h	/^  int empty;$/;"	m	language:C++	struct:shmQueueMeta
shmQueueMeta::full	/home/jin/github/file_service/code/ShmQueue.h	/^  int full;$/;"	m	language:C++	struct:shmQueueMeta
shmQueueMeta::lock	/home/jin/github/file_service/code/ShmQueue.h	/^  pthread_mutex_t lock;$/;"	m	language:C++	struct:shmQueueMeta
shmQueueMeta::readIndex	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int readIndex;$/;"	m	language:C++	struct:shmQueueMeta
shmQueueMeta::writeIndex	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int writeIndex;$/;"	m	language:C++	struct:shmQueueMeta
shmQueueMeta_t	/home/jin/github/file_service/code/ShmQueue.h	/^}shmQueueMeta_t;$/;"	t	language:C++	typeref:struct:shmQueueMeta
shmQueue_t	/home/jin/github/file_service/code/ShmQueue.h	/^}shmQueue_t;$/;"	t	language:C++	typeref:struct:shmQueue
simple	/home/jin/github/file_service/code/OutputGenerator.h	/^  long double simple;$/;"	m	language:C++	struct:resultInfo
sizeOfMsg	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int sizeOfMsg;$/;"	m	language:C++	struct:shmQueue
sizePerSeg	/home/jin/github/file_service/code/Client.c	/^unsigned int sizePerSeg = 0;$/;"	v	language:C++
sizePerSeg	/home/jin/github/file_service/code/OutputGenerator.h	/^  int sizePerSeg;$/;"	m	language:C++	struct:resultInfo
sizePerSeg	/home/jin/github/file_service/code/Server.c	/^unsigned int sizePerSeg = 0;$/;"	v	language:C++
sizePerSeg	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int sizePerSeg;$/;"	m	language:C++	struct:segInfo
sizePerSeg	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int sizePerSeg;$/;"	m	language:C++	struct:shmQueue
stress	/home/jin/github/file_service/code/OutputGenerator.h	/^  long double stress;$/;"	m	language:C++	struct:resultInfo
synchedClient	/home/jin/github/file_service/code/Server.c	/^int synchedClient;$/;"	v	language:C++
testRoundtrip	/home/jin/github/file_service/code/Client.c	/^void testRoundtrip(int iteration, char *fn, struct timeval *tripTime);$/;"	p	language:C++	file:
testRoundtrip	/home/jin/github/file_service/code/Client.c	/^void testRoundtrip(int iteration, char *fn,$/;"	f	language:C++
timeEachFile	/home/jin/github/file_service/code/Client.c	/^  double timeEachFile[10];$/;"	m	language:C++	struct:printInfo	file:
wait	/home/jin/github/file_service/code/OutputGenerator.h	/^  long double wait;$/;"	m	language:C++	struct:resultInfo
waitTime	/home/jin/github/file_service/code/Client.c	/^struct timeval waitTime;$/;"	v	language:C++	typeref:struct:timeval
workComp	/home/jin/github/file_service/code/Server.c	/^void *workComp();$/;"	p	language:C++	file:
workComp	/home/jin/github/file_service/code/Server.c	/^void *workComp(){$/;"	f	language:C++
writeIndex	/home/jin/github/file_service/code/ShmQueue.h	/^  unsigned int writeIndex;$/;"	m	language:C++	struct:shmQueueMeta
